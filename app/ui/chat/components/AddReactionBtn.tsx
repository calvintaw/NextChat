"use client";
import { useState, useRef, ButtonHTMLAttributes } from "react";
import { IconWithSVG } from "../../general/Buttons";
import clsx from "clsx";

// generated by ChatGPT
const emojiIcons = [
	"😄", // FaSmileBeam
	"❤️", // FaHeart
	"⭐", // FaStar
	"👍", // FaThumbsUp
	"🔔", // FaBell
	"😊", // GoSmiley
	"❤️", // GoHeartFill
	"⭐", // GoStarFill
	"👍", // GoThumbsup
	"🔔", // GoBellFill
	"😃", // HiEmojiHappy
	"❤️", // HiHeart
	"⭐", // HiStar
	"👍", // HiThumbUp
	"🔔", // HiBell
	"😄", // BsFillEmojiSmileFill
	"❤️", // BsFillHeartFill
	"⭐", // BsFillStarFill
	"👍", // BsFillHandThumbsUpFill
	"🔔", // BsFillBellFill
];
// end

type BtnProps = ButtonHTMLAttributes<HTMLButtonElement> & {
	open?: boolean;
};

export const AddReactionBtn = ({ className = "", open = false, ...rest }: BtnProps) => {
	const [selected, setSelected] = useState(0);
	const hasHovered = useRef(false);

	const handleHover = () => {
		if (open) return;
		if (hasHovered.current) return;
		hasHovered.current = true;

		setSelected((prev) => (prev + 1) % emojiIcons.length);

		setTimeout(() => {
			hasHovered.current = false;
		}, 200);
	};

	const Icon = emojiIcons[selected];

	return (
		<IconWithSVG onMouseEnter={handleHover} {...rest} className={`icon-chatbox group bg-transparent ${className}`}>
			<span

				className={clsx(
					"text-xl text-yellow-400",
					!open &&
					"text-xl scale-100 group-hover:scale-[1.2] group-hover:rotate-[1deg] animate-pop transition-all duration-150 ease-in-out"
				)}>
				{
					Icon
				}</span>
		</IconWithSVG>
	);
};
